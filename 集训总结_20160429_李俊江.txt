集训总结：

1.	内容

了解软件开发的具体流程。
实操软件开发。
听简单串讲html，css，javascript，vue.js，node.js，mysql，ajax，了解以上几者的基本功能及应用场景。
提出项目，根据项目提出具体的项目需求。根据项目需求，画出产品的原型，根据具体原型画出程序的逻辑框图，根据逻辑框图分步实现程序功能。
制作聊呗的前段静态页面，完善页面的显示布局以及功能按钮。
对程序后台逻辑实现进行讨论，确定实现的技术路径。
实现node.js对mysql数据库的操作。
找到可以运行的websocket多人聊天demo，将此demo植入到聊吧的前段页面
根据聊吧的需要，对websocket demo的消息进行重新排序，改变消息的现实样式，保持新消息在最末端，并且总是显示低端最新消息。
保持焦点总是处在聊天窗口的输入框，点击输入框会跳到最新消息。
从零开始在w3cschool学习javascript，学习javascript相关的基础内容。
搭建前后端开发环境，熟悉github的使用。

2.	收获：

进一步明晰软件开发流程以及每一步的具体操作。
实际操练使用html，css，并对javascript的一些基本操作做实操练习。
进一步了解vue.js，node.js，mysql，ajax的具体内容，应用场景，操作方式。并进行简单的操作练习。
语言入门和项目实操是不同的。软件项目实操以解决问题为主，语言入门以全面掌握基础知识为主。
同样一个功能的实现方式多样，根据实际不同的需求选择最合适的方法。同样能实现功能的方式。
直接调用别人完成的功能模块来实现自己的功能，效率通常要高些。
线索很多，工具很多，先一个一个搞定。
Javascript，node.js，vue.js，mysql，jquery，服务器和客户端的通信等的基础知识没有不行，从头开始慢慢看。

3.	不足

没有任何语言基础，同时也缺乏Javascript，node.js，vue.js，mysql，jquery的基础知识，想要搞定后端是很困难的。
就算借用现成的模块，不能读懂全部的代码，只能做简单的调用，进行更深入的操作难度很大。

4.	建议

打好基础，先从零开始把javascript学好。
